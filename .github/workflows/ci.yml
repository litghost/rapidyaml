name: ci

defaults:
  #if: "!contains(github.event.head_commit.message, 'skip ci')"  # SKIP
  run:
    # Use a bash shell so we can use the same syntax for environment variable
    # access regardless of the host operating system
    shell: bash -e -x {0}

on:
  - push
  - pull_request
  - workflow_dispatch

env:
  PROJ_PFX_TARGET: ryml-
  PROJ_PFX_CMAKE: RYML_
  CMAKE_FLAGS: -DRYML_TEST_SUITE=ON
  NUM_JOBS_BUILD: # 4


# ubuntu-20.04:
#   # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md
#   gcc: 7.5.0, 8.4.0, 9.3.0, 10.2.0
#   clang: 8.0.1, 9.0.1, 10.0.0
# ubuntu-18.04:
#   # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu1804-README.md
#   gcc: 7.5.0, 8.4.0, 9.3.0, 10.1.0
#   clang: 6.0.0, 8.0.0, 9.0.0
# ubuntu-16.04:
#   # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu1604-README.md
#   gcc: 5.5.0, 7.5.0, 8.4.0, 9.3.0
#   clang: 6.0.0, 8.0.0, 9.0.1
# macos-11.0: macOS Big Sur 11.0
#   # https://github.com/actions/virtual-environments/blob/main/images/macos/macos-11.0-Readme.md
#   Xcode 12.1 11.7
#   clang/LLVM 10.0.1
#   gcc-8 gcc-9
# macos-10.15: macOS Catalina 10.15
#   # https://github.com/actions/virtual-environments/blob/main/images/macos/macos-10.15-Readme.md
#   Xcode 12.1 11.7
#   clang/LLVM 11.0.0
#   gcc-8 gcc-9
# windows-2019:
#   # https://github.com/actions/virtual-environments/blob/main/images/win/Windows2019-Readme.md
#   vs2019
# windows-2016:
#   # https://github.com/actions/virtual-environments/blob/main/images/win/Windows2019-Readme.md
#   vs2017
jobs:

  #----------------------------------------------------------------------------
  test_api:
    continue-on-error: true
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {std: 17, cxx: g++-7,  bt: Release, os: ubuntu-18.04}
          - {std: 17, cxx: vs2019, bt: Release, os: windows-2019}
    env: {STD: "${{matrix.std}}", CXX_: "${{matrix.cxx}}", BT: "${{matrix.bt}}", BITLINKS: "${{matrix.bitlinks}}", VG: "${{matrix.vg}}", SAN: "${{matrix.san}}", LINT: "${{matrix.lint}}", OS: "${{matrix.os}}",
          API: ON, CMAKE_FLAGS: "-DRYML_DEV=ON -DRYML_BUILD_API=ON -DRYML_API_TESTS=ON -DRYML_API_BENCHMARKS=OFF"}
    steps:
      - {name: checkout, uses: actions/checkout@v2, with: {submodules: recursive}}
      - {name: python3, uses: actions/setup-python@v2, with: {python-version: 3.7}}
      - {name: install requirements, run: source .github/reqs.sh && c4_install_test_requirements $OS}
      - {name: show info, run: source .github/setenv.sh && c4_show_info && which swig }
      - name: api-shared64-configure---------------------------------------------------
        run: source .github/setenv.sh && c4_cfg_test shared64
      - name: api-shared64-python-build
        run: |
            python --version
            python -mvenv env
            source .github/setenv.sh
            case "${{matrix.os}}" in
              ubuntu*)
                source env/bin/activate
                ;;
              windows*)
                . env/Scripts/activate
                export CC=cl
                export CXX=cl
                ;;
            esac
            cd api/python
            pip install -r requirements_dev.txt
            python setup.py bdist_wheel
            pip install dist/*.whl
      - name: api-shared64-python-test
        run: |
            source .github/setenv.sh
            case "${{matrix.os}}" in
              ubuntu*)
                source env/bin/activate
                ;;
              windows*)
                . env/Scripts/activate
                ;;
            esac
            c4_build_target shared64 ryml-api-test-python3

